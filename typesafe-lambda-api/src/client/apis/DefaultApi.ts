/* tslint:disable */
/* eslint-disable */
/**
 * Simple API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HelloGet200Response,
  UsersPost201Response,
  UsersPostRequest,
} from '../models/index';
import {
    HelloGet200ResponseFromJSON,
    HelloGet200ResponseToJSON,
    UsersPost201ResponseFromJSON,
    UsersPost201ResponseToJSON,
    UsersPostRequestFromJSON,
    UsersPostRequestToJSON,
} from '../models/index';

export interface HelloGetRequest {
    name?: string;
}

export interface UsersPostOperationRequest {
    usersPostRequest: UsersPostRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Say hello
     */
    async helloGetRaw(requestParameters: HelloGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HelloGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters['name'] != null) {
            queryParameters['name'] = requestParameters['name'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/hello`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HelloGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Say hello
     */
    async helloGet(requestParameters: HelloGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HelloGet200Response> {
        const response = await this.helloGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create a user
     */
    async usersPostRaw(requestParameters: UsersPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UsersPost201Response>> {
        if (requestParameters['usersPostRequest'] == null) {
            throw new runtime.RequiredError(
                'usersPostRequest',
                'Required parameter "usersPostRequest" was null or undefined when calling usersPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UsersPostRequestToJSON(requestParameters['usersPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UsersPost201ResponseFromJSON(jsonValue));
    }

    /**
     * Create a user
     */
    async usersPost(requestParameters: UsersPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UsersPost201Response> {
        const response = await this.usersPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
